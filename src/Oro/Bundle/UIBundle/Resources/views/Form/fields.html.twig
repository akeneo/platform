{% extends 'form_div_layout.html.twig' %}

{% block form_row %}
    {% spaceless %}
        <div class="control-group{% if attr.class is defined %} {{ attr.class }}{% endif %}">
            {% if label is not sameas(false) %}
            {{ form_label(form, '' , { label_attr: label_attr|merge({ class: 'control-label' })}) }}
            {% endif %}
            <div class="controls{% if errors|length > 0 %} validation-error{% endif %}">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock form_row %}

{% block choice_widget_collapsed %}
    {% if client_validation %}
    <script type="text/javascript">
        require(['jquery'],
        function($){
            $(function() {
                $('#{{ id }}').on('uniformInit', function () {
                    $(this).filter('.error:not([multiple])').removeClass('error').closest('.selector').addClass('error');
                });
            });
        });
    </script>
    {% endif %}
    {{ parent() }}
{% endblock choice_widget_collapsed %}

{% block form_widget_simple %}
    {% if type is defined and type == 'file' and client_validation %}
    <script type="text/javascript">
        require(['jquery'],
        function($){
            $(function() {
                $('#{{ id }}').on('uniformInit', function () {
                    $(this).filter('.error').removeClass('error').closest('.uploader').addClass('error');
                });
            });
        });
    </script>
    {% endif %}
    {{ parent() }}
{% endblock form_widget_simple %}

{% block widget_attributes %}
    {% if errors|length > 0 %}
        {% set attr = attr|merge({'class': attr.class is defined ? attr.class ~ ' error' : 'error'}) %}
    {% endif %}
    {{ parent() }}
{% endblock widget_attributes %}

{% block widget_container_attributes %}
    {% if errors|length > 0 %}
        {% set attr = attr|merge({'class': attr.class is defined ? attr.class ~ ' error' : 'error'}) %}
    {% endif %}
    {{ parent() }}
{% endblock widget_container_attributes %}

{% block form_errors %}
    {%- spaceless -%}
        {% if errors|length > 0 %}
            {% if form.parent %}
                {% set combinedError = '' %}
                {% for error in errors %}
                    {% set error = error.messagePluralization is null
                        ? error.messageTemplate|trans(error.messageParameters, 'validators')
                        : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators') %}
                    {% set combinedError = (combinedError != '') ? combinedError ~ '; ' ~ error : error %}
                {% endfor %}
                <span class="validation-faled">{{ combinedError }}</span>
            {% else %}
                {{ parent() }}
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock form_errors %}

{% block date_widget %}
    {% spaceless %}
        {% set type = 'text' %}
        {% if widget == 'single_text' %}
            {{ block('form_widget_simple')|raw }}
        {% else %}
            <div {{ block('widget_container_attributes') }}>
                {{ date_pattern|replace({
                '{{ year }}':  form_widget(form.year),
                '{{ month }}': form_widget(form.month),
                '{{ day }}':   form_widget(form.day),
                })|raw }}
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock date_widget %}

{% block choice_widget_expanded %}
    {% spaceless %}
        {% set attr = attr|merge({'class': attr.class is defined ? attr.class ~ ' horizontal' : 'horizontal'}) %}
        {% set attr = attr|merge({'class': attr.class ~ ' validate-group'}) %}
        <div {{ block('widget_container_attributes') }}>
            {% for child in form %}
                <div class="oro-clearfix">
                    {{ form_widget(child) }}
                    {{ form_label(child) }}
                </div>
            {% endfor %}
        </div>
    {% endspaceless %}
{% endblock choice_widget_expanded %}

{% block choice_widget_options %}
    {% spaceless %}
        {% for group_label, choice in options %}
            {% if choice is iterable %}
                <optgroup label="{{ configs.is_translate_group is defined and not configs.is_translate_group ? group_label : group_label|trans({}, translation_domain) }}">
                    {% set options = choice %}
                    {{ block('choice_widget_options') }}
                </optgroup>
            {% else %}
                {% set label = configs.is_translate_option is defined and not configs.is_translate_option ? choice.label : choice.label|trans({}, translation_domain) %}
                <option {{ block('choice_widget_option_attributes') }} value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{% if (configs.is_safe is defined and configs.is_safe) %}{{ label|raw }}{% else %}{{ label }}{% endif %}</option>
            {% endif %}
        {% endfor %}
    {% endspaceless %}
{% endblock choice_widget_options %}

{% block choice_widget_option_attributes %}
{% spaceless %}
    {% if choice.label.attr is defined and choice.label.attr|length > 0 %}
        {% for attrname, attrvalue in choice.label.attr %}{{ attrname }}="{{ attrvalue }}" {% endfor %}
    {% endif %}
{% endspaceless %}
{% endblock choice_widget_option_attributes %}

{% block collection_render %}
    {% spaceless %}
        {% from 'OroUIBundle::macros.html.twig' import collection_prototype as collection  %}
        <div class="row-oro">
            <div class="collection-fields-list" data-prototype="{{ collection(subform)|escape }}">
                {% for field in subform.children %}
                    {{ collection(field) }}
                {% endfor %}
            </div>
            <a class="btn add-list-item" href="javascript: void(0);"><i class="icon-plus"></i>{{ 'Add'|trans }}</a>
        </div>
    {% endspaceless %}
{% endblock %}

{% block _oro_entity_config_config_field_type_widget %}
    {% for field in form.children %}
        {{ form_widget(field) }}
    {% endfor %}
{% endblock %}
